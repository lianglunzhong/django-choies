# -*- coding: utf-8 -*-
"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mptt',
    'registration',
    'rest_framework',
    'core',
    'accounts',
    'celebrities',
    'products',
    'carts',
    'orders',
    'banners',
]

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'LOCATION': '127.0.0.1:11211',
#     }
# }

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'DIRS': [os.path.join(BASE_DIR, "templates"), ],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': config.DB_NAME,                      # Or path to database file if using sqlite3.
        'USER': config.DB_USER,                      # Not used with sqlite3.
        'PASSWORD': config.DB_PASSWORD,                  # Not used with sqlite3.
        'HOST': config.DB_HOST,                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': config.DB_PORT,                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

BASE_URL = 'https://www.choies.com/'

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'zh-cn'

TIME_ZONE = 'Asia/Chongqing'


USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/' #静态文件目录

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
    os.path.join(BASE_DIR, "media"),
)

# MEDIA_ROOT = os.path.join(BASE_DIR, "media")
# MEDIA_ROOT = 'D:/python/uploads/'
# STATIC_PATH = 'D:/python/uploads/'
# MEDIA_URL = '/site_media/'


MEDIA_ROOT = '/home/choies/s3fs/uploads/' #图片目录
STATIC_PATH = '/home/choies/s3fs/uploads/' #图片目录
MEDIA_URL = '/site_media/'

#STATIC_ROOT = os.path.join(BASE_DIR, "static")
#STATIC_ROOT = os.path.join(BASE_DIR, "static/")

LOGGING = {
   'version': 1,
   'disable_existing_loggers': False,
   'formatters': {
       'verbose': {
           'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s',
           'datefmt': '%Y-%m-%d %H:%M:%S',
       },
       'simple': {
           'format': '%(levelname)s %(message)s'
       },
   },
   'handlers': {
       'file': {
           'level': 'DEBUG',
           'class': 'logging.FileHandler',
           'filename': os.path.join(BASE_DIR, "../logs", "debug.log"),
           'formatter': 'verbose',
       },
   },
   'loggers': {
       'product': {
           'handlers': ['file'],
           'level': 'DEBUG',
           'propagate': True,
       },
       'django.db': {
           'handlers': ['file'],
           'level': 'DEBUG',
           'propagate': True,
       },
   },
}

#LANGUAGE_CODE = 'zh-hans'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAdminUser',),
    'PAGE_SIZE': 10
}

LOGIN_URL = '/admin/'

#AUTH_USER_EMAIL_UNIQUE = True

ACCOUNT_ACTIVATION_DAYS = 7

#AUTH_USER_MODEL = 'accounts.User'

TAGGIT_CASE_INSENSITIVE = True


MEMCACHE_URL = '127.0.0.1:11211'

ES_URL = '127.0.0.1:9200'
# ES_URL = '192.168.11.150:9200'

ES_INDEX = 'product_basic_new_'

